/**
 * Created by LIYICHUN512 on 2016-06-13.
 */
(function (e) {
    "use strict";
    var t = e("#exchange").hasClass("ie");
    if (t) {
        var n = function () {
            TWP.Module.Stepper({container: "#stepper1", cycle_opts: {activePagerClass: "active"}});
            e.each(e("#pager-wrap li"), function (t, n) {
                e(this).attr("id", "list-" + t)
            })
        };
        n()
    } else {
        var r;
        var i = 992, s = 550, o = {
            top: 20,
            right: 10,
            bottom: 30,
            left: 100
        }, u = i - o.left - o.right, a = s - o.top - o.bottom;
        var f, l, c;
        var h = d3.format(), p = d3.format();
        var d = 1e3, v = 0, m = [true, false, false];
        ich.grabTemplates();
        var g = function () {
            y();
            S();
            T();
            N(0);
            n();
            k();
            O()
        };
        var y = function () {
            r = aca_data.map(function (t, n) {
                t.state = e.trim(t.state);
                t.subjectname = e.trim(t.subjectname);
                t.sendersubject = e.trim(t.sendersubject);
                t.receiversubject = e.trim(t.receiversubject);
                t.receiver = e.trim(t.receiver);
                t.subject = e.trim(t.subject);
                t.slug = b(t.state);
                t.eligible = t["per-eligible"];
                t.population = t["per-pop-apps"];
                t.success = t["per-success"];
                return t
            })
        };
        var b = function (e) {
            return e.replace(/[^-a-zA-Z0-9\s]+/ig, "").replace(/-/gi, "_").replace(/\s/gi, "_").toLowerCase()
        };
        var w = function (e) {
            return d3.scale.linear().domain(e).range([a, 0])
        };
        var E = function (e) {
            return d3.svg.axis().scale(e).orient("left")
        };
        var S = function () {
            f = d3.select("#chart").append("svg").attr("width", i).attr("height", s).append("g").attr("transform", "translate(" + o.left + "," + o.top + ")");
            l = f.selectAll(".state").data(r).enter().append("g").attr("class", function (e) {
                if (e.exchange === "federal") {
                    return "layer fedex " + e.slug
                } else {
                    return "layer stateex " + e.slug
                }
            })
        };
        var x = [];
        var T = function () {
            e.each(["per-eligible", "per-pop-apps", "per-success"], function (e, t) {
                var n = d3.extent(r, function (e) {
                    return e[t]
                }), i = w(n), s = E(i);
                x.push({key: t, domain: n, scale: i, axis: s, xPos: e * 240})
            })
        };
        var N = function (t) {
            var n = x[t], r = t - 1, i = x[r];
            var s = f.append("g").attr("transform", "translate(" + n.xPos + ", 0)").attr("class", "y axis franklin axis-" + t).call(n.axis.tickFormat(h));
            if (t === 1) {
                s.call(n.axis.tickFormat(p))
            }
            if (t > 0) {
                s.style("opacity", 0).transition().duration(d).style("opacity", 1)
            }
            var o = l.append("circle").attr("class", "circle-" + t).attr("r", 5).attr("cx", function () {
                if (t > 0) {
                    return i.xPos
                } else {
                    return n.xPos
                }
            }).attr("cy", function (e) {
                if (e[n.key] === 0) {
                    return 4e3
                } else if (t > 0) {
                    return i.scale(e[i.key])
                } else {
                    return n.scale(e[n.key])
                }
            });
            if (t > 0) {
                c = d3.svg.line().x(function (e) {
                    return e.x
                }).y(function (e) {
                    return e.y
                }).interpolate("linear");
                o.transition().duration(d).attr("cx", function () {
                    return n.xPos
                }).attr("cy", function (e) {
                    if (e[n.key] === 0) {
                        return 4e3
                    } else {
                        return n.scale(e[n.key])
                    }
                });
                var u = l.append("path").attr("class", "path-" + t).attr("d", function (e) {
                    return c([{x: i.xPos, y: i.scale(e[i.key])}, {x: n.xPos, y: n.scale(e[n.key])}])
                });
                var a = 500;
                u.attr("stroke-dasharray", a + " " + a).attr("stroke-dashoffset", a).transition().duration(d).ease("linear").attr("stroke-dashoffset", 0);
                d3.selectAll(".state-active circle").moveToFront()
            }
            l.on("mouseover", function (n) {
                e.showTooltip({
                    wrapperId: "chart", data: n, contentFunction: function (e) {
                        var n = ich["state_tooltip_" + t](e);
                        return n
                    }, xOffset: 20, yOffset: 0
                });
                d3.select(".state-active").classed("state-active", false);
                d3.select(this).classed("state-active", true).moveToFront();
                d3.selectAll(".state-active circle").moveToFront()
            }).on("mouseout", function () {
                e.hideTooltip("chart");
                d3.select(".state-active").classed("state-active", false)
            })
        };
        var C = function (e) {
            d3.selectAll(".circle-" + e).transition().duration(d).attr("cx", function () {
                var e = parseFloat(d3.select(this).attr("cx")), t = Math.floor(Math.random() * 200 - 100);
                return e + t
            }).attr("cy", 1e3).remove();
            d3.selectAll(".path-" + e).transition().duration(d).attr("d", function () {
                var e = parseFloat(d3.select(this).attr("d").split(",")[1]), t = parseFloat(d3.select(this).attr("d").split(",")[2]);
                return c([{x: e, y: 1e3}, {x: t, y: 1e3}])
            }).remove();
            d3.select(".axis-" + e).transition().duration(d).style("opacity", 0).remove()
        };
        var n = function () {
            TWP.Module.Stepper({container: "#stepper1", cycle_opts: {activePagerClass: "active"}});
            e.each(e("#pager-wrap li"), function (t, n) {
                e(this).attr("id", "list-" + t)
            })
        };
        var k = function () {
            e("#pager-wrap li, #next-panel").on("click", function () {
                var t = e("li.active").attr("id"), n = parseFloat(t.split("-")[1]), r = v - n, i = e("#spark1-notes");
                if (n === 0) {
                    L(i);
                    A(e("#spark-headers .note-1"));
                    A(e("#spark-headers .note-2"))
                } else if (n === 1) {
                    L(e("#spark-headers .note-1"));
                    A(e("#spark-headers .note-2"));
                    A(i)
                } else if (n === 2) {
                    L(e("#spark-headers .note-1"));
                    L(e("#spark-headers .note-2"));
                    A(i)
                }
                if (r > 0) {
                    var r = v - n, s = n + 1, o = n + 2;
                    C(s);
                    m[s] = false;
                    if (r === 2) {
                        C(o);
                        m[o] = false
                    }
                } else if (r === -2) {
                    N(1);
                    setTimeout(function () {
                        N(2)
                    }, d - 200);
                    m[1] = true;
                    m[2] = true
                } else if (!m[n]) {
                    N(n);
                    m[n] = true
                }
                v = n
            })
        };
        var L = function (t) {
            e(t).animate({opacity: 1})
        };
        var A = function (e) {
            e.animate({opacity: 0})
        };
        var O = function () {
            var t = e("select#combo");
            t.combobox({
                selectCallback: function (e) {
                    D(e)
                }, placeholder: "Search for a state"
            }).siblings(".ui-combobox").find("input").val("");
            M(t);
            _()
        };
        var M = function (t) {
            e.each(r, function (n, r) {
                var i = e('<option value="' + n + '">' + r.state + "</option>");
                t.append(i)
            })
        };
        var _ = function () {
            e("#searchbox").on("change", ".ui-combobox input", function () {
                if (e(this).val() === "") {
                    d3.select(".state-active").classed("state-active", false)
                }
            })
        };
        var D = function (e) {
            var t = b(e.value);
            d3.select(".state-active").classed("state-active", false);
            d3.select("." + t).classed("state-active", true).moveToFront();
            d3.selectAll(".state-active circle").moveToFront()
        };
        d3.selection.prototype.moveToFront = function () {
            return this.each(function () {
                this.parentNode.appendChild(this)
            })
        };
        g()
    }
})(jQuery)